- name: provider templates
  template:
    src: "{{item}}-provider.j2"
    dest: "{{workdir}}00-provider-{{item}}.tf"
  with_items: "{{terraform_providers|default(['aws'])}}"

- name: remote states
  template:
    src: "remotestate.j2"
    dest: "{{workdir}}01-remotestate.tf"

- name: concat nic lists
  set_fact:
    _mynic: "{{_mynic|default([])+(item.nic|default([]))}}"
  with_items: "{{vms|list}}"

- name: import state from other terraform projects
  template:
    src: "importstate.j2"
    dest: "{{workdir}}02-importstate.tf"
  vars:
    allsubnets: "{{(_mynic|default([]) + common.nic|default([]) + load_balancers|default([]))|map(attribute='subnet')|unique()|list}}"

- name: local variables
  template:
    src: "locals.j2"
    dest: "{{workdir}}03-locals.tf"

- name: define security groups
  template:
    src: aws_security_groups.j2
    dest: "{{workdir}}10-security_groups.tf"
  when:
    security_groups is defined

- name: IAM resources
  template:
    src: aws_roles.j2
    dest: "{{workdir}}11-iam_resources.tf"
  when:
    iam_roles is defined or instance_profiles is defined

- name: policy files
  template:
    src: "{{item}}"
    dest: "{{workdir}}{{item}}"
  with_items:
  - ec2_assume_role_policy.json

#- name: get datafile definition
#  debug: msg="{{(datafiles|selectattr("name", "match", "^apic-user-data$")|map(attribute="singleton")|first)}}"

- name: singleton templates
  template:
    src: "template.j2"
    dest: "{{workdir}}12-template-{{item.name}}.tf"
  with_items: "{{datafiles|selectattr('singleton')|list}}"
  when: (datafiles|default([])|selectattr('singleton')|list|length) > 0

- debug: msg="{{images}}"
- name: find image IDs
  template:
    src: "image.j2"
    dest: "{{workdir}}13-image-{{item.name}}.tf"
  with_items: "[{{images|default([])|list()}}]"
  when: (images|default([])|length) >0

- name: instances
  template:
    src: aws_instance.j2
    dest: "{{workdir}}20-server-{{item.name}}.tf"
  vars:
    templates: "{{datafiles|default([])|rejectattr('singleton')|list}}"
  with_items: "[{{vms|default([])|list()}}]"

- name: classic load balancers
  template:
    src: aws_elb.j2
    dest: "{{workdir}}30-balancers.tf"

- name: load balancers
  template:
    src: aws_lb.j2
    dest: "{{workdir}}31-balancers.tf"
